import{S as w,P as f,V as S,j as y,k as v,l as L,m as p,n as x,G as z,W as B}from"./three.module.b50ed5da.js";import{S as C}from"./stats.eaeba3ab.js";import{g as D}from"./gemotry.cd6e5826.js";import{_ as M,h as k,z as G,s as P,t as b}from"./index.10dd6c38.js";const E={id:"line-dashed",class:"line-dashed"},W=k({setup(A){let t,s,n;return G(()=>{const o=document.getElementById("line-dashed")||document.body,a=o.clientWidth,i=o.clientHeight;n=new w,n.position.set(0,0,0),s=new f(45,a/i,1,1e3),s.position.set(100,100,100),s.lookAt(n.position);const r=new D,u=r.createBoxBuffer(25,25,25),c=r.hilbert3D(new S(0,0,0),25,1,0,1,2,3,4,5,6,7),_=new y(c).getPoints(c.length*1),h=new v().setFromPoints(_),d=new L(h,new p({color:16711935,dashSize:1,gapSize:.5}));d.computeLineDistances();const l=new x(u,new p({color:16755200,dashSize:3,gapSize:1}));l.computeLineDistances();const e=new z;e.add(d),e.add(l),n.add(e),t=new B,t.setClearColor(16777215),t.setSize(a,i),o.appendChild(t.domElement);const g=new C(o,0),m=()=>{requestAnimationFrame(m),t.render(n,s),e.rotation.x+=.005,e.rotation.y+=.005,e.rotation.z+=.005,g.update()};m()}),(o,a)=>(P(),b("div",E))}});var q=M(W,[["__scopeId","data-v-99446d92"]]);export{q as default};
