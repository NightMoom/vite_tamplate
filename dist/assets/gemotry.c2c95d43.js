import{k as D,F as z,V as x}from"./three.module.6eb5fcb4.js";const m=[[-1,-1,-1],[-1,1,-1],[-1,1,-1],[1,1,-1],[1,1,-1],[1,-1,-1],[1,-1,-1],[-1,-1,-1],[-1,-1,1],[-1,1,1],[-1,1,1],[1,1,1],[1,1,1],[1,-1,1],[1,-1,1],[-1,-1,1],[-1,-1,-1],[-1,-1,1],[-1,1,-1],[-1,1,1],[1,1,-1],[1,1,1],[1,-1,-1],[1,-1,1]];class F{createBoxBuffer(y=1,i=1,t=1){const h=new D,s=[];return m.forEach(o=>{s.push(o[0]*y,o[1]*i,o[2]*t)}),h.setAttribute("position",new z(s,3)),h}hilbert3D(y=new x(0,0,0),i=10,t=1,h=0,s=1,o=2,r=3,l=4,u=5,a=6,b=7){const p=i/2,A=[new x(y.x-p,y.y+p,y.z-p),new x(y.x-p,y.y+p,y.z+p),new x(y.x-p,y.y-p,y.z+p),new x(y.x-p,y.y-p,y.z-p),new x(y.x+p,y.y-p,y.z-p),new x(y.x+p,y.y-p,y.z+p),new x(y.x+p,y.y+p,y.z+p),new x(y.x+p,y.y+p,y.z-p)],f=[A[h],A[s],A[o],A[r],A[l],A[u],A[a],A[b]];if(--t>=0){const w=[];return Array.prototype.push.apply(w,this.hilbert3D(f[0],p,t,h,r,l,b,a,u,o,s)),Array.prototype.push.apply(w,this.hilbert3D(f[1],p,t,h,b,a,s,o,u,l,r)),Array.prototype.push.apply(w,this.hilbert3D(f[2],p,t,h,b,a,s,o,u,l,r)),Array.prototype.push.apply(w,this.hilbert3D(f[3],p,t,o,r,h,s,a,b,l,u)),Array.prototype.push.apply(w,this.hilbert3D(f[4],p,t,o,r,h,s,a,b,l,u)),Array.prototype.push.apply(w,this.hilbert3D(f[5],p,t,l,r,o,u,a,s,h,b)),Array.prototype.push.apply(w,this.hilbert3D(f[6],p,t,l,r,o,u,a,s,h,b)),Array.prototype.push.apply(w,this.hilbert3D(f[7],p,t,a,u,o,s,h,r,l,b)),w}return f}}export{F as g};
